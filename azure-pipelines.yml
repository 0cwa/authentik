trigger:
  - master

resources:
  - repo: self

variables:
  POSTGRES_DB: passbook
  POSTGRES_USER: passbook
  POSTGRES_PASSWORD: "EK-5jnKfjrGRm<77"

stages:
  - stage: Lint
    jobs:
      - job: pylint
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.8'
          - task: CmdLine@2
            inputs:
              script: |
                sudo pip install -U wheel pipenv
                pipenv install --dev
          - task: CmdLine@2
            inputs:
              script: pipenv run pylint passbook
      - job: black
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.8'
          - task: CmdLine@2
            inputs:
              script: |
                sudo pip install -U wheel pipenv
                pipenv install --dev
          - task: CmdLine@2
            inputs:
              script: pipenv run black --check passbook
      - job: prospector
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.8'
          - task: CmdLine@2
            inputs:
              script: |
                sudo pip install -U wheel pipenv
                pipenv install --dev
                pipenv install --dev prospector --skip-lock
          - task: CmdLine@2
            inputs:
              script: pipenv run prospector --check passbook
      - job: bandit
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.8'
          - task: CmdLine@2
            inputs:
              script: |
                sudo pip install -U wheel pipenv
                pipenv install --dev
          - task: CmdLine@2
            inputs:
              script: pipenv run bandit -r passbook
      - job: pyright
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: UseNode@1
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.8'
          - task: CmdLine@2
            inputs:
              script: npm install -g pyright
          - task: CmdLine@2
            inputs:
              script: |
                sudo pip install -U wheel pipenv
                pipenv install --dev
          - task: CmdLine@2
            inputs:
              script: pipenv run pyright
